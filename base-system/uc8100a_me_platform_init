#!/bin/bash
#
# Copyright (C) 2017 MOXA Inc. - https://www.moxa.com/
#
# Author: Wes Huang (黃淵河) <wes.huang@moxa.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#

rfs_resize () {
	expand2fs
	mv /sbin/expand2fs /sbin/expand2fs.bak
	sync
	/sbin/reboot -d -f -i
}

init_network_config() {
	local num_of_eth="${1}"

	echo "# interfaces(5) file used by ifup(8) and ifdown(8)"
	echo "# Include files from /etc/network/interfaces.d:"
	echo "source-directory /etc/network/interfaces.d"
	echo -n "auto"

	for (( i=0 ; i<${num_of_eth}; i++ ))
	do
		echo -n " eth${i}"
	done
	echo " lo"
	echo "iface lo inet loopback"

	for (( i=0 ; i<${num_of_eth}; i++ ))
	do
		echo "iface eth${i} inet static"
		echo "        address 192.168.$((${i} + 3)).127"
		echo "        network 192.168.$((${i} + 3)).0"
		echo "        netmask 255.255.255.0"
		echo "        broadcast 192.168.$((${i} + 3)).255"
	done
}

set_configs() {
	local model_name=${1}

	# copy configs to /etc/moxa-configs
	cp /etc/moxa-configs/configs/* /etc/moxa-configs/
	cp /etc/moxa-configs/udev/* /etc/udev/rules.d/

	# disable cellular and wifi related service by default
	systemctl enable moxa-cellular-signald.service &
	systemctl enable moxa-cellular-utils.service &
	#systemctl disable moxa-wifi-signald.service

	# fix the issue that mount storage fuse-related filesystem via udev might be failed
	cp -a /lib/systemd/system/systemd-udevd.service /etc/systemd/system/
	sed -i 's/MountFlags=slave/MountFlags=shared/' /etc/systemd/system/systemd-udevd.service

	# fastboot setting
	fw_setenv fastboot 1	
	systemctl disable networking.service &
	systemctl disable ssh.service &
	systemctl disable rsyslog.service &
	systemctl disable ntp.service &
	systemctl disable apt-daily.service
	systemctl disable apt-daily-upgrade.service
	systemctl daemon-reload	&

	depmod "4.4.0-cip-uc8100a_me+"

	init_network_config 2 > /etc/network/interfaces

	# fix kernel 4.4 swap memory issue.
	if ! grep "vm.min_free_kbytes" /etc/sysctl.conf > /dev/null; then
                echo "vm.min_free_kbytes=16384" >> /etc/sysctl.conf
        fi
}

init_uart_mode() {
	local num_of_node=${1}
	local i=""

	modprobe mxu11x0

	for ((i=0; i<${num_of_node}; i++))
	do
		mx-uart-ctl -p ${i} -m 0
	done
}

initial_wifi () {
	if dmesg | grep "idProduct=9378" > /dev/null; then
		systemctl start moxa-wifi-signald.service &
	fi
}

initial_cellular() {
	#if dmesg | grep -E "idProduct=68c0|idProduct=15c1|idProduct=005b" > /dev/null; then
		systemctl start moxa-cellular-signald.service &
		systemctl start moxa-cellular-utils.service &
        #fi
}

check_tpm2() {
	if [ -e "/dev/tpm0" ]; then
	#if dmesg | grep -q "tpm"; then
		sed -i '/blacklist tpm_spi_tis/d' /etc/modprobe.d/blacklist.conf
		if systemctl status tpm2-resourcemgr.service | grep "running"; then
			systemctl enable tpm2-resourcemgr.service
			systemctl start tpm2-resourcemgr.service
		fi
	else
		if ! grep -q "blacklist tpm_spi_tis" "/etc/modprobe.d/blacklist.conf"; then
			echo "blacklist tpm_spi_tis" >> "/etc/modprobe.d/blacklist.conf"
		fi
		#systemctl disable tpm2-resourcemgr.service
		#systemctl stop tpm2-resourcemgr.service
		apt-get purge tpm2-tools -y
		apt-get autoremove -y
	fi
}

init_tpm2() {
	if [ -e "/dev/tpm0" ]; then
	#if [ -e "/dev/tpm0" ]; then
		systemctl start tpm2-resourcemgr.service
	fi
}

init_gpio () {
	test ! -e /sys/class/gpio/gpio86/direction && echo 86 > /sys/class/gpio//
	
	echo out > /sys/class/gpio/gpio86/direction
	echo 1 > /sys/class/gpio/gpio86/value
	test ! -e /sys/class/gpio/gpio88/direction && echo 88 > /sys/class/gpio//
	
	echo out > /sys/class/gpio/gpio88/direction
	echo 1 > /sys/class/gpio/gpio88/value
	sleep 1
	echo 0 > /sys/class/gpio/gpio86/value
	echo 0 > /sys/class/gpio/gpio88/value
}

uc8100a_me_initial() {
	local model_name=$(kversion | awk '{print $1}')	

	# only needs to initial one time
	if [ -f /sbin/expand2fs ]; then
		check_tpm2
		set_configs ${model_name}
		rfs_resize
	fi

	# initial by model
	#initial_wifi &
	init_gpio 
	initial_cellular &
	init_uart_mode 2 &
	init_tpm2 &
	# general initial	
	systemctl start networking.service &
	systemctl start ssh.service &
	depmod -a
}

stop_mx-pbtn() {
	killall -9 mx-pbtn >/dev/null 2>&1
}

umount_rfs() {
	umount -f -l /tmp
        umount -f -l /home
        umount -f -l /usr
        umount -f -l /lib
        umount -f -l /bin
        umount -f -l /sbin
        umount -f -l /etc
        umount -f -l /var
        umount -f -l /root
        umount -f -l /overlayfs
}

uc8100a_me_stop() {
	local model_name=$(kversion | awk '{print $1}')	

	# stop by model
	#wifi_mgmt stop
	cell_mgmt stop	
	#mx-mod-ctl -p off 1

	# general stop	
	systemctl disable networking.service
	systemctl disable ssh.service	
}

case "$1" in
    start)
	uc8100a_me_initial
	/bin/factory_test.sh &
        ;;
    restart|reload|force-reload)
        echo "Error: argument '$1' not supported" >&2
        exit 3
        ;;
    stop)
	uc8100a_me_stop
        ;;
    *)
        echo "Usage: $0 start|stop" >&2
        exit 3
        ;;
esac

